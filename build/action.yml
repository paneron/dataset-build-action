name: 'dataset-build-action'
description: 'composite action which setup metanorma private GitHub packages for rubygems'
inputs:
  scaffolding:
    description: 'Scaffolding repository'
  path:
    description: 'Path to the project'
    required: false
  optionsFile:
    description: 'Path to options file (which used during templates processing) relative to "path"'
    required: false

runs:
  using: "composite"
  steps:
    # validation
    - shell: bash
      working-directory: ${{ inputs.path || github.workspace }}
      run: |
        if [ -d "./src" ]; then
          echo "::error::Repository contains src directory, but this conflicts with scafolding content"
          exit -1
        fi

        for f in "package.json static.config.js yarn.lock"; do
          if [ -f "./${f}" ]; then
            echo "::error::Repository contains ${f} file, but this conflicts with scafolding content"
            exit -1
          fi
        done

    # copy build files
    - shell: bash
      working-directory: ${{ inputs.path || github.workspace }}
      run: |
        git clone https://github.com/${{ inputs.scaffolding }} ${{ runner.temp }}/dataset-scaffolding
        cp -r ${{ runner.temp }}/dataset-scaffolding/src ${{ github.workspace }}/
        for f in "package.json static.config.js yarn.lock"; then
          cp ${{ runner.temp }}/dataset-scaffolding/$f ${{ github.workspace }}/ || echo "$f not eixsts in scaffolding"
        done

    - shell: bash
      working-directory: ${{ inputs.path || github.workspace }}
      run: yarn install

    - shell: bash
      if: ${{ hashFiles(inputs.optionsFile) != '' }}
      working-directory: ${{ inputs.path || github.workspace }}
      run: |
        yarn add mustache
        for tmpl in ${{ runner.temp }}/**/*.tmpl; do
          result=${tmpl#${{ runner.temp }}}
          result=${result%.tmpl}
          yarn mustache -p $tmpl ${{ inputs.optionsFile }} ${result}
        done
        for tmpl in ${{ runner.temp }}/dataset-scaffolding/; then
        mustache -p path/to/somefile.someext.tmpl ${{ inputs.optionsFile }} path/to/somefile.someext

    - shell: bash
      working-directory: ${{ inputs.path || github.workspace }}
      run: yarn build
